/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.lsuc.lsuc;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Organizationalunit generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`ORGANIZATIONALUNIT`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`BUSINESS_FK`", "`ORGANIZATIONALUNIT_NUMBER`"})})
public class Organizationalunit implements Serializable {

    private Integer pk;
    private int businessFk;
    private String organizationalunitNumber;
    private String organizationalunitName;
    private Character isActive;
    private Integer organizationalunitTypeFk;
    private Business business;
    private Organizationalunittype organizationalunittype;
    private List<Organizationalunitaddress> organizationalunitaddresses;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PK`", nullable = false, scale = 0, precision = 10)
    public Integer getPk() {
        return this.pk;
    }

    public void setPk(Integer pk) {
        this.pk = pk;
    }

    @Column(name = "`BUSINESS_FK`", nullable = false, scale = 0, precision = 10)
    public int getBusinessFk() {
        return this.businessFk;
    }

    public void setBusinessFk(int businessFk) {
        this.businessFk = businessFk;
    }

    @Column(name = "`ORGANIZATIONALUNIT_NUMBER`", nullable = true, length = 10)
    public String getOrganizationalunitNumber() {
        return this.organizationalunitNumber;
    }

    public void setOrganizationalunitNumber(String organizationalunitNumber) {
        this.organizationalunitNumber = organizationalunitNumber;
    }

    @Column(name = "`ORGANIZATIONALUNIT_NAME`", nullable = true, length = 50)
    public String getOrganizationalunitName() {
        return this.organizationalunitName;
    }

    public void setOrganizationalunitName(String organizationalunitName) {
        this.organizationalunitName = organizationalunitName;
    }

    @Column(name = "`IS_ACTIVE`", nullable = true, length = 1)
    public Character getIsActive() {
        return this.isActive;
    }

    public void setIsActive(Character isActive) {
        this.isActive = isActive;
    }

    @Column(name = "`ORGANIZATIONALUNIT_TYPE_FK`", nullable = true, scale = 0, precision = 10)
    public Integer getOrganizationalunitTypeFk() {
        return this.organizationalunitTypeFk;
    }

    public void setOrganizationalunitTypeFk(Integer organizationalunitTypeFk) {
        this.organizationalunitTypeFk = organizationalunitTypeFk;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`BUSINESS_FK`", referencedColumnName = "`PK`", insertable = false, updatable = false)
    public Business getBusiness() {
        return this.business;
    }

    public void setBusiness(Business business) {
        if(business != null) {
            this.businessFk = business.getPk();
        }

        this.business = business;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`ORGANIZATIONALUNIT_TYPE_FK`", referencedColumnName = "`PK`", insertable = false, updatable = false)
    public Organizationalunittype getOrganizationalunittype() {
        return this.organizationalunittype;
    }

    public void setOrganizationalunittype(Organizationalunittype organizationalunittype) {
        if(organizationalunittype != null) {
            this.organizationalunitTypeFk = organizationalunittype.getPk();
        }

        this.organizationalunittype = organizationalunittype;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "organizationalunit")
    public List<Organizationalunitaddress> getOrganizationalunitaddresses() {
        return this.organizationalunitaddresses;
    }

    public void setOrganizationalunitaddresses(List<Organizationalunitaddress> organizationalunitaddresses) {
        this.organizationalunitaddresses = organizationalunitaddresses;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Organizationalunit)) return false;
        final Organizationalunit organizationalunit = (Organizationalunit) o;
        return Objects.equals(getPk(), organizationalunit.getPk());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPk());
    }
}

