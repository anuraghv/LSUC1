/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.lsuc.lsuc;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Classpraticegroup generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`CLASSPRATICEGROUP`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`CLASS_FK`", "`PRACTICE_GROUP_FK`"})})
public class Classpraticegroup implements Serializable {

    private Integer pk;
    private Integer classFk;
    private Integer practiceGroupFk;
    private Character isRequiredToPayFees;
    private ClassEntity classEntity;
    private Practicegroup practicegroup;
    private List<Licenseeclasspracticegroup> licenseeclasspracticegroups;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PK`", nullable = false, scale = 0, precision = 10)
    public Integer getPk() {
        return this.pk;
    }

    public void setPk(Integer pk) {
        this.pk = pk;
    }

    @Column(name = "`CLASS_FK`", nullable = true, scale = 0, precision = 10)
    public Integer getClassFk() {
        return this.classFk;
    }

    public void setClassFk(Integer classFk) {
        this.classFk = classFk;
    }

    @Column(name = "`PRACTICE_GROUP_FK`", nullable = true, scale = 0, precision = 10)
    public Integer getPracticeGroupFk() {
        return this.practiceGroupFk;
    }

    public void setPracticeGroupFk(Integer practiceGroupFk) {
        this.practiceGroupFk = practiceGroupFk;
    }

    @Column(name = "`IS_REQUIRED_TO_PAY_FEES`", nullable = true, length = 1)
    public Character getIsRequiredToPayFees() {
        return this.isRequiredToPayFees;
    }

    public void setIsRequiredToPayFees(Character isRequiredToPayFees) {
        this.isRequiredToPayFees = isRequiredToPayFees;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`CLASS_FK`", referencedColumnName = "`PK`", insertable = false, updatable = false)
    public ClassEntity getClassEntity() {
        return this.classEntity;
    }

    public void setClassEntity(ClassEntity classEntity) {
        if(classEntity != null) {
            this.classFk = classEntity.getPk();
        }

        this.classEntity = classEntity;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`PRACTICE_GROUP_FK`", referencedColumnName = "`PK`", insertable = false, updatable = false)
    public Practicegroup getPracticegroup() {
        return this.practicegroup;
    }

    public void setPracticegroup(Practicegroup practicegroup) {
        if(practicegroup != null) {
            this.practiceGroupFk = practicegroup.getPk();
        }

        this.practicegroup = practicegroup;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "classpraticegroup")
    public List<Licenseeclasspracticegroup> getLicenseeclasspracticegroups() {
        return this.licenseeclasspracticegroups;
    }

    public void setLicenseeclasspracticegroups(List<Licenseeclasspracticegroup> licenseeclasspracticegroups) {
        this.licenseeclasspracticegroups = licenseeclasspracticegroups;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Classpraticegroup)) return false;
        final Classpraticegroup classpraticegroup = (Classpraticegroup) o;
        return Objects.equals(getPk(), classpraticegroup.getPk());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPk());
    }
}

