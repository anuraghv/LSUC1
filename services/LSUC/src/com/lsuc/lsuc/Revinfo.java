/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.lsuc.lsuc;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigInteger;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Revinfo generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`REVINFO`")
public class Revinfo implements Serializable {

    private Integer rev;
    private BigInteger revtstmp;
    private List<LicenseeclasspracticegroupAud> licenseeclasspracticegroupAuds;
    private List<PersonAud> personAuds;
    private List<PersonaddressAud> personaddressAuds;
    private List<LicenseeAud> licenseeAuds;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`REV`", nullable = false, scale = 0, precision = 10)
    public Integer getRev() {
        return this.rev;
    }

    public void setRev(Integer rev) {
        this.rev = rev;
    }

    @Column(name = "`REVTSTMP`", nullable = true, scale = 0, precision = 20)
    public BigInteger getRevtstmp() {
        return this.revtstmp;
    }

    public void setRevtstmp(BigInteger revtstmp) {
        this.revtstmp = revtstmp;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "revinfo")
    public List<LicenseeclasspracticegroupAud> getLicenseeclasspracticegroupAuds() {
        return this.licenseeclasspracticegroupAuds;
    }

    public void setLicenseeclasspracticegroupAuds(List<LicenseeclasspracticegroupAud> licenseeclasspracticegroupAuds) {
        this.licenseeclasspracticegroupAuds = licenseeclasspracticegroupAuds;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "revinfo")
    public List<PersonAud> getPersonAuds() {
        return this.personAuds;
    }

    public void setPersonAuds(List<PersonAud> personAuds) {
        this.personAuds = personAuds;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "revinfo")
    public List<PersonaddressAud> getPersonaddressAuds() {
        return this.personaddressAuds;
    }

    public void setPersonaddressAuds(List<PersonaddressAud> personaddressAuds) {
        this.personaddressAuds = personaddressAuds;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "revinfo")
    public List<LicenseeAud> getLicenseeAuds() {
        return this.licenseeAuds;
    }

    public void setLicenseeAuds(List<LicenseeAud> licenseeAuds) {
        this.licenseeAuds = licenseeAuds;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Revinfo)) return false;
        final Revinfo revinfo = (Revinfo) o;
        return Objects.equals(getRev(), revinfo.getRev());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getRev());
    }
}

