/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.lsuc.lsuc;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.sql.Time;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.wavemaker.runtime.data.annotations.ServerDefinedProperty;
import com.wavemaker.runtime.data.replacers.Scope;
import com.wavemaker.runtime.data.replacers.providers.VariableType;

/**
 * LicenseeclasspracticegroupApprovals generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`LICENSEECLASSPRACTICEGROUP_APPROVALS`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`LICENSEE_FK`", "`NEW_CLASS_PRACTICE_GROUP_FK`", "`NEW_EFFECTIVE_FROM_DATE`", "`NEW_EFFECTIVE_TO_DATE`"})})
public class LicenseeclasspracticegroupApprovals implements Serializable {

    private Integer pk;
    private int licenseeclasspracticegroupPk;
    private Integer licenseeFk;
    private Character oldIsPrimary;
    private Date oldEffectiveFromDate;
    private Date oldEffectiveToDate;
    private Integer oldClassPracticeGroupFk;
    private Character newIsPrimary;
    private Date newEffectiveFromDate;
    private Date newEffectiveToDate;
    private Integer newClassPracticeGroupFk;
    private String status;
    @ServerDefinedProperty( value = VariableType.USER_NAME, scopes = { Scope.UPDATE })
    private String modifiedBy;
    @ServerDefinedProperty( value = VariableType.USER_NAME, scopes = { Scope.INSERT })
    private String createdBy;
    @ServerDefinedProperty( value = VariableType.DATE, scopes = { Scope.INSERT })
    private Date createdDate;
    @ServerDefinedProperty( value = VariableType.TIME, scopes = { Scope.INSERT })
    private Time createdTime;
    @ServerDefinedProperty( value = VariableType.TIME, scopes = { Scope.UPDATE })
    private Time modifiedTime;
    @ServerDefinedProperty( value = VariableType.DATE, scopes = { Scope.UPDATE })
    private Date modifiedDate;
    private Licensee licensee;
    private Licenseeclasspracticegroup licenseeclasspracticegroup;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PK`", nullable = false, scale = 0, precision = 10)
    public Integer getPk() {
        return this.pk;
    }

    public void setPk(Integer pk) {
        this.pk = pk;
    }

    @Column(name = "`LICENSEECLASSPRACTICEGROUP_PK`", nullable = false, scale = 0, precision = 10)
    public int getLicenseeclasspracticegroupPk() {
        return this.licenseeclasspracticegroupPk;
    }

    public void setLicenseeclasspracticegroupPk(int licenseeclasspracticegroupPk) {
        this.licenseeclasspracticegroupPk = licenseeclasspracticegroupPk;
    }

    @Column(name = "`LICENSEE_FK`", nullable = true, scale = 0, precision = 10)
    public Integer getLicenseeFk() {
        return this.licenseeFk;
    }

    public void setLicenseeFk(Integer licenseeFk) {
        this.licenseeFk = licenseeFk;
    }

    @Column(name = "`OLD_IS_PRIMARY`", nullable = true, length = 1)
    public Character getOldIsPrimary() {
        return this.oldIsPrimary;
    }

    public void setOldIsPrimary(Character oldIsPrimary) {
        this.oldIsPrimary = oldIsPrimary;
    }

    @Column(name = "`OLD_EFFECTIVE_FROM_DATE`", nullable = true)
    public Date getOldEffectiveFromDate() {
        return this.oldEffectiveFromDate;
    }

    public void setOldEffectiveFromDate(Date oldEffectiveFromDate) {
        this.oldEffectiveFromDate = oldEffectiveFromDate;
    }

    @Column(name = "`OLD_EFFECTIVE_TO_DATE`", nullable = true)
    public Date getOldEffectiveToDate() {
        return this.oldEffectiveToDate;
    }

    public void setOldEffectiveToDate(Date oldEffectiveToDate) {
        this.oldEffectiveToDate = oldEffectiveToDate;
    }

    @Column(name = "`OLD_CLASS_PRACTICE_GROUP_FK`", nullable = true, scale = 0, precision = 10)
    public Integer getOldClassPracticeGroupFk() {
        return this.oldClassPracticeGroupFk;
    }

    public void setOldClassPracticeGroupFk(Integer oldClassPracticeGroupFk) {
        this.oldClassPracticeGroupFk = oldClassPracticeGroupFk;
    }

    @Column(name = "`NEW_IS_PRIMARY`", nullable = true, length = 1)
    public Character getNewIsPrimary() {
        return this.newIsPrimary;
    }

    public void setNewIsPrimary(Character newIsPrimary) {
        this.newIsPrimary = newIsPrimary;
    }

    @Column(name = "`NEW_EFFECTIVE_FROM_DATE`", nullable = true)
    public Date getNewEffectiveFromDate() {
        return this.newEffectiveFromDate;
    }

    public void setNewEffectiveFromDate(Date newEffectiveFromDate) {
        this.newEffectiveFromDate = newEffectiveFromDate;
    }

    @Column(name = "`NEW_EFFECTIVE_TO_DATE`", nullable = true)
    public Date getNewEffectiveToDate() {
        return this.newEffectiveToDate;
    }

    public void setNewEffectiveToDate(Date newEffectiveToDate) {
        this.newEffectiveToDate = newEffectiveToDate;
    }

    @Column(name = "`NEW_CLASS_PRACTICE_GROUP_FK`", nullable = true, scale = 0, precision = 10)
    public Integer getNewClassPracticeGroupFk() {
        return this.newClassPracticeGroupFk;
    }

    public void setNewClassPracticeGroupFk(Integer newClassPracticeGroupFk) {
        this.newClassPracticeGroupFk = newClassPracticeGroupFk;
    }

    @Column(name = "`STATUS`", nullable = true, length = 10)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "`MODIFIED_BY`", nullable = true, insertable = false, length = 10)
    public String getModifiedBy() {
        return this.modifiedBy;
    }

    public void setModifiedBy(String modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    @Column(name = "`CREATED_BY`", nullable = true, updatable = false, length = 15)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "`CREATED_DATE`", nullable = true, updatable = false)
    public Date getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "`CREATED_TIME`", nullable = true, updatable = false)
    public Time getCreatedTime() {
        return this.createdTime;
    }

    public void setCreatedTime(Time createdTime) {
        this.createdTime = createdTime;
    }

    @Column(name = "`MODIFIED_TIME`", nullable = true, insertable = false)
    public Time getModifiedTime() {
        return this.modifiedTime;
    }

    public void setModifiedTime(Time modifiedTime) {
        this.modifiedTime = modifiedTime;
    }

    @Column(name = "`MODIFIED_DATE`", nullable = true, insertable = false)
    public Date getModifiedDate() {
        return this.modifiedDate;
    }

    public void setModifiedDate(Date modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`LICENSEE_FK`", referencedColumnName = "`PK`", insertable = false, updatable = false)
    public Licensee getLicensee() {
        return this.licensee;
    }

    public void setLicensee(Licensee licensee) {
        if(licensee != null) {
            this.licenseeFk = licensee.getPk();
        }

        this.licensee = licensee;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`NEW_CLASS_PRACTICE_GROUP_FK`", referencedColumnName = "`PK`", insertable = false, updatable = false)
    public Licenseeclasspracticegroup getLicenseeclasspracticegroup() {
        return this.licenseeclasspracticegroup;
    }

    public void setLicenseeclasspracticegroup(Licenseeclasspracticegroup licenseeclasspracticegroup) {
        if(licenseeclasspracticegroup != null) {
            this.newClassPracticeGroupFk = licenseeclasspracticegroup.getPk();
        }

        this.licenseeclasspracticegroup = licenseeclasspracticegroup;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof LicenseeclasspracticegroupApprovals)) return false;
        final LicenseeclasspracticegroupApprovals licenseeclasspracticegroupApprovals = (LicenseeclasspracticegroupApprovals) o;
        return Objects.equals(getPk(), licenseeclasspracticegroupApprovals.getPk());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPk());
    }
}

