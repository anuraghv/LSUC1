/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.lsuc.lsuc;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Licenseeinsurance generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`LICENSEEINSURANCE`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`LICENSEE_FK`", "`INSURANCE_COVERAGE_TYPE_FK`"})})
public class Licenseeinsurance implements Serializable {

    private Integer pk;
    private Integer insuranceCoverageTypeFk;
    private Integer licenseeFk;
    private String isInsured;
    private Insurancecoveragetype insurancecoveragetype;
    private Licensee licensee;
    private List<Licenseeinsurancepolicy> licenseeinsurancepolicies;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PK`", nullable = false, scale = 0, precision = 10)
    public Integer getPk() {
        return this.pk;
    }

    public void setPk(Integer pk) {
        this.pk = pk;
    }

    @Column(name = "`INSURANCE_COVERAGE_TYPE_FK`", nullable = true, scale = 0, precision = 10)
    public Integer getInsuranceCoverageTypeFk() {
        return this.insuranceCoverageTypeFk;
    }

    public void setInsuranceCoverageTypeFk(Integer insuranceCoverageTypeFk) {
        this.insuranceCoverageTypeFk = insuranceCoverageTypeFk;
    }

    @Column(name = "`LICENSEE_FK`", nullable = true, scale = 0, precision = 10)
    public Integer getLicenseeFk() {
        return this.licenseeFk;
    }

    public void setLicenseeFk(Integer licenseeFk) {
        this.licenseeFk = licenseeFk;
    }

    @Column(name = "`IS_INSURED_`", nullable = true, length = 18)
    public String getIsInsured() {
        return this.isInsured;
    }

    public void setIsInsured(String isInsured) {
        this.isInsured = isInsured;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`INSURANCE_COVERAGE_TYPE_FK`", referencedColumnName = "`PK`", insertable = false, updatable = false)
    public Insurancecoveragetype getInsurancecoveragetype() {
        return this.insurancecoveragetype;
    }

    public void setInsurancecoveragetype(Insurancecoveragetype insurancecoveragetype) {
        if(insurancecoveragetype != null) {
            this.insuranceCoverageTypeFk = insurancecoveragetype.getPk();
        }

        this.insurancecoveragetype = insurancecoveragetype;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`LICENSEE_FK`", referencedColumnName = "`PK`", insertable = false, updatable = false)
    public Licensee getLicensee() {
        return this.licensee;
    }

    public void setLicensee(Licensee licensee) {
        if(licensee != null) {
            this.licenseeFk = licensee.getPk();
        }

        this.licensee = licensee;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "licenseeinsurance")
    public List<Licenseeinsurancepolicy> getLicenseeinsurancepolicies() {
        return this.licenseeinsurancepolicies;
    }

    public void setLicenseeinsurancepolicies(List<Licenseeinsurancepolicy> licenseeinsurancepolicies) {
        this.licenseeinsurancepolicies = licenseeinsurancepolicies;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Licenseeinsurance)) return false;
        final Licenseeinsurance licenseeinsurance = (Licenseeinsurance) o;
        return Objects.equals(getPk(), licenseeinsurance.getPk());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPk());
    }
}

