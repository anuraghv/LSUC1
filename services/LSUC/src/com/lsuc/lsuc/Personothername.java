/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.lsuc.lsuc;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Personothername generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`PERSONOTHERNAME`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`PERSON_FK`", "`OTHER_NAME_TYPE_FK`"})})
public class Personothername implements Serializable {

    private Integer pk;
    private Integer personFk;
    private Integer otherNameTypeFk;
    private String name;
    private Othernametype othernametype;
    private Person person;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PK`", nullable = false, scale = 0, precision = 10)
    public Integer getPk() {
        return this.pk;
    }

    public void setPk(Integer pk) {
        this.pk = pk;
    }

    @Column(name = "`PERSON_FK`", nullable = true, scale = 0, precision = 10)
    public Integer getPersonFk() {
        return this.personFk;
    }

    public void setPersonFk(Integer personFk) {
        this.personFk = personFk;
    }

    @Column(name = "`OTHER_NAME_TYPE_FK`", nullable = true, scale = 0, precision = 10)
    public Integer getOtherNameTypeFk() {
        return this.otherNameTypeFk;
    }

    public void setOtherNameTypeFk(Integer otherNameTypeFk) {
        this.otherNameTypeFk = otherNameTypeFk;
    }

    @Column(name = "`NAME`", nullable = true, length = 100)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`OTHER_NAME_TYPE_FK`", referencedColumnName = "`PK`", insertable = false, updatable = false)
    public Othernametype getOthernametype() {
        return this.othernametype;
    }

    public void setOthernametype(Othernametype othernametype) {
        if(othernametype != null) {
            this.otherNameTypeFk = othernametype.getPk();
        }

        this.othernametype = othernametype;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`PERSON_FK`", referencedColumnName = "`PK`", insertable = false, updatable = false)
    public Person getPerson() {
        return this.person;
    }

    public void setPerson(Person person) {
        if(person != null) {
            this.personFk = person.getPk();
        }

        this.person = person;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Personothername)) return false;
        final Personothername personothername = (Personothername) o;
        return Objects.equals(getPk(), personothername.getPk());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPk());
    }
}

